一、默写：
  1.设计一个程序，在控制台输出“hello world”
public class HelloWorld {
	//程序的入口（主方法）
	public static void main(String[] args){
		System.out.println("hello world");
	}
}

  2.代码注释分为哪两种
	单行注释：//注释内容
	多行注释：/*注释内容*/

  3.jvm、jre、jdk分别是什么，它们什么关系
	jvm是java虚拟机，jre是java运行时环境，jdk是java开发工具包
	jre包含了jvm，jdk包含了jre

  4.计算：
	1）5+（-11）
	5	0000 0101
原码	-11	1000 1011
反码		1111 0100
补码		1111 0101

		0000 0101
		1111 0101
		----------
结果的补码	1111 1010
反码		1111 1001
原码		1000 0110	-6


	2）现有二进制数1100110
		转成十进制
		转成八进制	146
		转成十六进制	66

二、回顾：
  1.什么软件
	指令和数据
  2.软件开发

  3.软件的分类：
	系统软件、引用软件

  4.人机交互：
	图形界面，命令行

  5.常用的计算机指令：
	cls	清空控制台
	cd	进入某个目录
	cd..
	dir	显示当前目录的所有子目录和文件
	exit	退出空这台
	盘符：	磁盘切换

  6.常用的快捷键：
	ctrl+c/v/x/a/s/z/y	
	复制/粘贴/剪切/全选/保存/撤销/恢复

	window+e/r/l
	打开/跳出控制台/锁屏

  7.java语言：
	1995年，sun公司发布的高级编程语言
	2010年，被甲骨文收购

	J2SE(标准版),J2EE(企业版),J2ME(小型版)

	JAVA语言的跨平台性：java程序是执行在java虚拟机上的(jvm)

  8.搭建开发环境：
	1）安装jdk，下载地址：www.oracle.com
	2）配置环境变量：

  9.入门程序

  10.二进制
	底层对数据处理是使用补码进行运算的

三、变量和常量：
  1.变量：
	值可以改变的数据
	变量的特点：
	一个变量只能存储一个数据，再次给变量赋值时，新的值覆盖旧的值

  2.变量的声明与初始化：
	1）变量的声明：
	数据类型 变量名(一个合法的标识符);
	int a;
	2）初始化：
	先声明在初始化：
		int a;
		a = 3;
	声明的同时初始化：
		int a = 3;

	注意：一个变量在使用之前必须初始化
		int a;
		a = 6;
		int b = a+3;

  3.变量的分类：
	局部变量：声明在方法体或者代码块中的变量
		作用域：从声明开始，到所在的方法体或代码块结束

	public class Test {
		public static void main(String[] args){
			int a = 8;
		}
	}	

	全局变量：声明在类体中的变量
		作用域：从声明开始，到所在的类结束
	public class Test {
		int a = 5;
	}

  4.常量：
	值不可以改变的数据
	常量的特点：一个常量只能存储一个数据，常量一旦被初始化，就不能再次赋值

	如何声明一个常量：final关键字
		常量需要使用final关键字修饰

四、数据类型：
数据存储在内存中，一个数据需要多大的内存存储

	数据类型的作用就是告诉内存空间，想要存储的数据需要多少空间

  1.数据类型的分类：
	引用数据类型：数组，类，接口，枚举
	基本数据类型：
		数值型：
		  整数型：byte(1),short(2),int(4),long(8)
		  浮点型：float(4),double(8)
		字符型：char(2)
		布尔型：boolean(1)真假

  2.基本数据类型的取值范围（整数型）：
	见图

  3.数据类型之间的类型转换：
	数据类型的优先级：
	byte、short(char) < int < long < float < double

	自动转换：从低优先级向高优先级转换
	强制转换：从高优先级向低优先级转换

	注意：
	1）所有的整数默认是int类，若超出int的取值范围，可以使用long存储，但是要在数值后加字母l，大小写无所谓
	2）所有的小数默认是double类型，若想定义一个单精度的变量，需要在数值后加字母f，大小写无所谓

	所有的字符和数值是一一对应，有Unicode字符集的存在

	关于字符和数值之间的转换：
	char转int，自动转换
	int转char，强制转换


五、运算符：
  1.运算符的分类：
	算术运算符，赋值运算符，关系运算符，逻辑运算符，字符串连接符，三目运算符，位运算符

  2.字符串连接符：+
	所有的基本数据类型与字符串进行连接，基本数据类型就会转成字符串形式

	int a = 2;
	String s = "" + a
	2		"2"

	"" + 2 + 5

  3.算术运算符：+、-、*、/、%、++、--
	什么类型的数据通过运算结果还什么类型
	1）+、-、*：与实际运算结果一致
	2）/、%：
		int a = 5;
		int b = 2;
		int c = a / b;

除法运算，当除数和被除数都是整数时，结果也是整数，结果是商

	%求余数运算：取模运算,结果是余数
	int d = a % b;

	3）++（自增）、--（自减）
	int a = 4;
	a++;	//a = a + 1;
	a--;	//a = a - 1;

	--a;
	++a;

	前置自增/自减：现将原数据做自增或自减1运算，再将自增或自减后的数据做其他运算/操作
	后置自增/自减：现将数据做其他运算或操作，再对数据进行自增或自减

	注意：类型转换问题
	byte a = 3;
	a++;//a = a + 1;

  4.赋值运算符：=、+=、-=、*=、/=、%=
	int a = 3;
	a += 2;//a = a + 2;
	a -= 3;//a = a - 3;
	a *= 2;//a = a * 2;
	a /= 2;//a = a / 2;
	a %= 3;//a = a % 3;

	byte a = 3;
	a += 4;
	a = a + 4;


  5.关系运算符：比较两个数据大小关系的
	>,<,>=,<=,!=,==
	关系运算符的结果是布尔类型数据

  6.逻辑运算符：&&（逻辑与）、||（逻辑或）、!（逻辑非）
	注意：逻辑运算符的操作数是布尔类型数据

	逻辑与和逻辑或有两个操作数，逻辑非只有一个操作数

	逻辑非运算!：非真即假，非假即真
	boolean b = true;
	boolean result = !b;

	逻辑与&&：当两个操作数都为true时，逻辑与结果为true，否则为false
	逻辑或||：当两个操作数都为false时，逻辑或结果为false，否则为true

	逻辑或和逻辑与运算遵循一个运算法则：短路法

	短路法：在逻辑与和逻辑或运算过程中，当第一个操作数可以决定整个逻辑运算时，后面的操作数不做运算


  7.三目运算符（选择运算符）：
	格式：
	表达式?值1:值2;

	表达式结果是布尔类型，先对表达式结果进行判断，当结果为true时，三目运算结果为值1，否则为值2

	案例：键盘输入两个整数，输出较大的数
	Scanner input = new Scanner(System.in);
	int a = input.nextInt();//阻塞性方法

	案例：键盘输入三个整数，输出最大的数

  8.位运算符：&、|、~、^、>>、>>>、<<
	位运算符是对二进制进行操作的运算符
	&、|：两个操作数，操作数的类型可以是整数，字符，布尔类型
	当&和|的操作数是布尔类型时，运算结果和逻辑运算一样，区别是按位与和按位或不短路
	&：按位与运算，二进制位对应为1时，结果为1，否则为0
	|：按位或运算，二进制为对应为0时，结果为0，否则为1

	~：按位取反：二进制位各位取反
	^：按位异或：二进制位对应相同为0，不同为1

	>>：有符号的右移位，低位舍去，高位补0（正）或1（负）
		5>>3
	
	>>>：无符号的右移位，低位舍去，高位补0
	-5>>>3

	<<：左移位，高位舍去，低位补0

六、运算符的优先级
  1.总体上：算术>关系>逻辑

	注意：&& > ||

  2.小括号的优先级最高


七、转义字符：
	转义字符和其他字符组合具有新的含义，转义字符可以在字符串中表示一个特殊字符

	转义字符：\
	\n	表示换行
	\t	表示一个制表符
	\r	回车

	特殊字符组合，表示一个特殊字符
	\'	表示一个单引号
	\"	表示一个双引号
	\\	表示一个反斜杠
















