一、默写：
  1.设计一个程序，键盘输入1~7数字，输出星期几
	1~星期日
	2~星期一
	3~星期二
	4~星期三
	5~星期四
	6~星期五
	7~星期六
import java.util.*;
public class Test{
	public static void main(String[]args){
		Scanner input = new Scanner(System.in);
		System.out.println("请输入一个1~7的数");
		int i = input.nextInt();
		switch(i){
		case 1:
			System.out.println("星期日");
			break;
		case 2:
			//
		case 3:
			//
		case 4:
			//
		case 5:
			//
		case 6:
			//
		case 7:
			//
		default:
			System.out.println("输入有误");
		}
	}
}

  2.设计程序，打印九九乘法表

  3.找出100~999之间的所有的水仙花数
	各位数的立方和等于本身
	for(int i=100; i<=999; i++){
		int i = 123
		个位：int a = 123%10
		十位：int b = 123/10%10		123%100/10
		百位：int c = 123/100
		int sum = a*a*a + b*b*b + c*c*c;
		if(sum==i){
			System.out.println(i);
		}
	}

二、回顾：
  1.流程控制：

  2.三种流程控制语句：
	顺序，分支，循环

  3.分支：
	1）if(表达式){//功能代码}
	2）if..else..
		if(表达式){//功能1}else{//功能2}
	3）嵌套if..else..
		if(表达式){//功能1}else{//功能2}
		功能1和功能2都可以含有if..else..分支语句
	4）if..else if..else..
	if(表达式1){//功能1}
	else if(表达式2){//功能2}
	else if(表达式3){//功能3}
	......
	else{//功能n}

	5）switch..case..default..语句：
	case和default语句具有穿透性
	使用break关键字打破穿透性

  4.循环：
	1）for循环：
		for(表达式1;表达式2;表达式3){//循环体}
	2）while循环：
		将for循环省略了表达式1和表达式3变形来的
		while(表达式){//循环体}
	3）do..while循环：
		do{//循环体}while(表达式);
	4）增强for循环：forEach循环
		for(数据类型 中间变量:数组名){//循环体}

  5.嵌套循环：
	循环中还有循环

  6.break和continue

三、初步认识数组：
	衣柜：是一个装衣服的容器，将衣服分门别类的整理储存

  1.什么数组：
	容器，存储一组相同数据类型数据的容器

  2.数组的特点：
	数组可以存储多个相同数据类型的数据，在内存空间中所有的数据是连续的
	数组中数据的个数的固定不变的（定长），一旦初始化数组，长度确定后，就不可以修改

  3.使用数组的好处和局限：
	好处：可以同时声明多个变量，连续的，便于查找使用
	局限：容易造成数据溢出（ArrayIndexOutOfBoundsException）

  4.数组的声明和初始化：
	1）声明：
		声明变量：数据类型 变量名;
		声明数组：数据类型 数组名;


	2）数组的初始化：
		数组中的数据称为数组的元素
		i.静态初始化：不需要给数组定义长度，只需要给每一个元素进行初始化值即可
		int[] arr;
		arr = new int[]{1,2,3};
		arr = {1,2,3};
	
		ii.动态初始化：不需要给每一个元素进行赋值，只需要给数组定义长度即可，由系统给每一个元素分配默认值
		int[] arr = new int[整形数据];
	说明：整形数据：表示数组的长度（数组中元素的个数）

	系统分配的默认值：
	正数：0
	浮点型：0.0
	字符型：'\u0000'
	布尔型：false
	
	引用数据类型：null

	注意：初始化数组时，要么使用动态初始化，要么使用静态初始化，坚决不允许混合使用


四、数组（引用数据类型）的存储：
  1.引用数据类型在内存中分为两部分进行存储
	引用-----数组名：存储在栈中，栈的存储结构遵循先进后出
	元素-----数据：存储在堆中

	栈中除了存储了引用之外还存储了第一个元素在堆中的地址

  2.基本数据类型和引用数据类型的区别
	基本类型：
	int a = 2;
	int b = a;
	b = 5;
	System.out.println(a);


	数组可以通过下标访问，数组中第一个元素的下表是0
	引用类型：
	int[] a = {1,2,3};
	int[] b = a;
	b[1] = 7;
	System.out.println(a[1]);

五、数组的使用：
  1.下标访问数组元素：
	由于数组中的元素是连续的，所以我们可以通过每一个元素在数组中的位置进行对数组元素的访问，
注意：数组的第一个元素的下表是0,最后一个元素的下标是长度减1
	int[] arr = {1,2,3};
	若下标大于等于数组的长度时或小于0时，抛出ArrayIndexOutOfBoundsException

  2.数组的长度：
	获取数组的长度，数组中多少个元素
	所有的数组都有的一个属性：length属性
	int[] arr = {1,2,3};
	int l = arr.length;
	System.out.println(arr.length);

  3.获取数组中所有的元素：遍历
	1）使用普通循环：通过下标访问每一个元素
		int[] arr = {1,2,3};
		for(int i=0; i<arr.length; i++){
			System.out.println(arr[i]);
		}
	2)增强for循环：
		char[] arr = {'a','b','c'};
		for(char c:arr){
			System.out.println(c);
		}

  4.动态初始化，给每个元素重新赋值
	int[] arr = new int[3];
	使用循环给元素进行重新赋值，不可以使用增强for循环
	只能使用普通for循环

  5.修改数组中的元素值：
	通过下标获取到元素，然后重新赋值


六、数组的元素查找：
  1.顺序查找：
	实现过程：将要查找的数据在数组中每一个元素进行匹配

	实现方法：for循环和分支语句结合完成

	练习：int[] arr = {1,2,3,4,5,6,7,8,9,0};
		从以上数组中找出正数7的下标

  2.二分法查找：
	原理：不断的缩小查找范围
	要求：数组中元素必须是从大到小或从小到大

	int[] arr = {1,2,3,4,5,6,7,8,9};


七、数组元素排序：
  1.选择排序:
	原理：先从所有的元素中找出最大的元素，放到第一个元素的位置，再从剩余的元素中找出最大的放到第二个元素的位置，以此类推
 （选择排序外循环确定位置；类循环确定比较的次数！！）

  2.冒泡法：
	原理：元素两两比较，大的下沉，小的上浮
（外层循环群定比较的轮数，内层循坏确定比较的次数！！）

八、多维数组：二维数组
  1.什么是二维数组：
	数组是一个装数据容器，数据分为基本类型数据和引用类型数据
	二维数组就是一个数组中的元素还是一个数组

  2.二维数组的声明与初始化：
	数据类型 数组名;
	数组名 = 值;

	int[][] arr = new int[3][3];
	int[][] arr = new int[3][];

	int[][] arr = new int[][]{{},{},{}};
	int[][] arr = {{},{},{}};

	扩展：
	int arr[]
	int[] arr

	int a[],b;

	int[] a,b;

	int[] a[];
	int[][] a;
	int a[][];

	int[][] a,b;
	int[] a[],b;
	int[] a[],b[];

  3.二维数组的遍历：
	嵌套循环

九、Arrays工具类
	此类中提供了一组对数组元素进行操作的方法

	binarySearch：数组元素查找
	sort：将数组元素升序排序
	fill：使用指定的值将数组中所有的元素替换
	toString：将数组转成字符串形式[值1,值2...]

